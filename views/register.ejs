<!-- views/register.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CareerExplorer - Student Registration</title>
    <!-- Tailwind CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2DkKkRJ55WClKj7gI0VZXqw5q4K/fPGMOKgJc++k5/kwmW62T9J1p+mdI1lW7Z9AA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }

        /* Custom Animation: Fade In */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .animate-fade-in {
            animation: fadeIn 1s ease-out forwards;
        }

        /* Shake Animation for Error */
        @keyframes shake {
            0% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-5px); }
            100% { transform: translateX(0); }
        }

        .animate-shake {
            animation: shake 0.3s;
        }

        /* Floating Label Animation */
        .floating-label {
            position: relative;
        }

        .floating-label input {
            border: 1px solid #d1d5db;
            padding: 12px 12px 12px 12px;
            border-radius: 8px;
            width: 100%;
            transition: border-color 0.3s;
        }

        .floating-label label {
            position: absolute;
            top: 12px;
            left: 12px;
            background-color: white;
            padding: 0 4px;
            color: #6b7280;
            transition: all 0.2s;
            pointer-events: none;
        }

        .floating-label input:focus + label,
        .floating-label input:not(:placeholder-shown) + label {
            top: -8px;
            left: 8px;
            font-size: 0.8rem;
            color: #3b82f6;
        }

        /* Button Hover Animation */
        .button-animate {
            transition: transform 0.2s, background-color 0.2s;
        }

        .button-animate:hover {
            transform: scale(1.05);
            background-color: #2563eb;
        }

        /* Background Illustration */
        .bg-illustration {
            position: absolute;
            top: 0;
            right: 0;
            opacity: 0.1;
        }

        /* Notification Styles */
        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            min-width: 300px;
            max-width: 90%;
            z-index: 1000;
            padding: 16px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            opacity: 0;
            animation: slideDown 0.5s forwards;
        }

        .notification-success {
            background-color: #d1fae5;
            color: #065f46;
        }

        .notification-error {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .notification i {
            margin-right: 8px;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translate(-50%, -20px); }
            to { opacity: 1; transform: translate(-50%, 0); }
        }

        @keyframes slideUp {
            from { opacity: 1; transform: translate(-50%, 0); }
            to { opacity: 0; transform: translate(-50%, -20px); }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-purple-100 relative flex items-center justify-center min-h-screen">
    <!-- Background Illustration -->
    <div class="bg-illustration">
        <svg width="400" height="400" viewBox="0 0 400 400">
            <defs>
                <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
                    <stop offset="0%" style="stop-color:rgba(59, 130, 246, 0.2); stop-opacity:1" />
                    <stop offset="100%" style="stop-color:rgba(168, 85, 247, 0.2); stop-opacity:1" />
                </radialGradient>
            </defs>
            <circle cx="200" cy="200" r="150" fill="url(#grad1)" />
        </svg>
    </div>

    <!-- Notification Container -->
    <% if (typeof error !== 'undefined' && error) { %>
        <div class="notification notification-error" id="notification">
            <i class="fas fa-exclamation-triangle"></i>
            <span><%= error %></span>
        </div>
    <% } %>
    <% if (typeof success !== 'undefined' && success) { %>
        <div class="notification notification-success" id="notification">
            <i class="fas fa-check-circle"></i>
            <span><%= success %></span>
        </div>
    <% } %>

    <!-- Registration Form Container -->
    <div class="bg-white bg-opacity-90 backdrop-filter backdrop-blur-lg p-8 rounded-lg shadow-lg max-w-md w-full animate-fade-in">
        <!-- Header with Website Name -->
        <div class="flex flex-col items-center mb-6">
            <h1 class="text-3xl font-bold text-blue-600 mb-2">CareerExplorer</h1>
            <p class="text-gray-600 text-sm">Discover Your Future Path</p>
        </div>

        <!-- Registration Form -->
        <form action="/register" method="POST" id="registrationForm" class="space-y-6">
            <!-- Name Field with Floating Label -->
            <div class="floating-label">
                <input type="text" id="name" name="name" required placeholder=" " 
                       class="px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200">
                <label for="name" class="text-gray-700">Full Name</label>
            </div>

            <!-- Standard Field with Floating Label -->
            <div class="floating-label">
                <input type="number" id="standard" name="standard" min="1" max="12" required placeholder=" " 
                       class="px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200">
                <label for="standard" class="text-gray-700">Standard</label>
            </div>

            <!-- Submit Button with Animation -->
            <button type="submit" 
                    class="w-full bg-blue-600 text-white px-4 py-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200 button-animate">
                <span class="flex items-center justify-center">
                    <i class="fas fa-paper-plane mr-2"></i>
                    Register
                </span>
            </button>
        </form>
    </div>

    <!-- Optional: Additional JavaScript for Form Validation Animations and Notification Auto-hide -->
    <script>
        // Form Validation
        document.getElementById('registrationForm').addEventListener('submit', function(event) {
            const name = document.getElementById('name');
            const standard = document.getElementById('standard');
            let valid = true;
            let errorMessages = [];

            // Simple Validation Example
            if (name.value.trim() === '') {
                errorMessages.push('Name is required.');
                name.classList.add('border-red-500', 'animate-shake');
                valid = false;
            }

            if (standard.value < 1 || standard.value > 12) {
                errorMessages.push('Standard must be between 1 and 12.');
                standard.classList.add('border-red-500', 'animate-shake');
                valid = false;
            }

            if (!valid) {
                event.preventDefault();
                showAlert(errorMessages.join('\n'), 'error');
            }
        });

        // Remove shake animation after it completes
        const inputs = document.querySelectorAll('input');
        inputs.forEach(input => {
            input.addEventListener('animationend', () => {
                input.classList.remove('animate-shake', 'border-red-500');
            });
        });

        // Function to show notifications
        function showAlert(message, type) {
            const notification = document.createElement('div');
            notification.classList.add('notification', type === 'error' ? 'notification-error' : 'notification-success');
            notification.innerHTML = `
                <i class="fas ${type === 'error' ? 'fa-exclamation-triangle' : 'fa-check-circle'}"></i>
                <span>${message}</span>
            `;
            document.body.appendChild(notification);

            // Animate Slide Down
            setTimeout(() => {
                notification.style.opacity = '1';
                notification.style.transform = 'translate(-50%, 0)';
            }, 10);

            // Remove after 5 seconds
            setTimeout(() => {
                // Animate Slide Up
                notification.style.opacity = '0';
                notification.style.transform = 'translate(-50%, -20px)';
                // Remove from DOM after animation
                notification.addEventListener('transitionend', () => {
                    notification.remove();
                });
            }, 5000);
        }

        // Auto-hide server-side messages
        window.addEventListener('load', () => {
            const notification = document.getElementById('notification');
            if (notification) {
                // Remove after 5 seconds
                setTimeout(() => {
                    notification.style.opacity = '0';
                    notification.style.transform = 'translate(-50%, -20px)';
                    notification.addEventListener('transitionend', () => {
                        notification.remove();
                    });
                }, 5000);
            }
        });
    </script>
</body>
</html>
    